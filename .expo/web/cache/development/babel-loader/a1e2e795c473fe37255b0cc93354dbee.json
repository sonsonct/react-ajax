{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pagination from \"./components/Pagination\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    data = _useState2[0],\n    setData = _useState2[1];\n\n  var _useState3 = useState(1),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentPage = _useState4[0],\n    setCurrentPage = _useState4[1];\n  var _useState5 = useState(10),\n    _useState6 = _slicedToArray(_useState5, 1),\n    recordsPerPage = _useState6[0];\n  var indexOfLastRecord = currentPage * recordsPerPage;\n  var indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n\n  var currentRecords = data.slice(indexOfFirstRecord, indexOfLastRecord);\n  var nPages = Math.ceil(data.length / recordsPerPage);\n  useEffect(function () {\n    getData();\n  }, []);\n  var getData = function () {\n    var _ref = _asyncToGenerator(function* () {\n      fetch(\"https://ghibliapi.herokuapp.com/films\").then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        return setData(resJson);\n      });\n    });\n    return function getData() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  console.log(data);\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item;\n    return _jsxs(View, {\n      style: styles.card,\n      children: [_jsx(Image, {\n        source: {\n          uri: \"\" + item.movie_banner\n        },\n        style: styles.image\n      }), _jsxs(View, {\n        style: styles.textContainer,\n        children: [_jsx(Text, {\n          style: styles.title,\n          children: item.title\n        }), _jsx(Text, {\n          children: item.description\n        })]\n      })]\n    });\n  };\n  return _jsxs(View, {\n    style: styles.outerContainer,\n    children: [_jsx(View, {\n      style: styles.innerContainer,\n      children: _jsx(FlatList, {\n        data: currentRecords,\n        renderItem: renderItem\n      })\n    }), _jsx(Pagination, {\n      nPages: nPages,\n      currentPage: currentPage,\n      setCurrentPage: setCurrentPage\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  outerContainer: {\n    flex: 1\n  },\n  innerContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 20\n  },\n  card: {\n    marginVertical: 20,\n    borderWidth: 1,\n    borderRadius: 5\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\"\n  },\n  description: {},\n  image: {\n    width: \"100%\",\n    height: 200\n  },\n  textContainer: {\n    padding: 15\n  }\n});","map":{"version":3,"names":["useState","useEffect","Pagination","App","data","setData","currentPage","setCurrentPage","recordsPerPage","indexOfLastRecord","indexOfFirstRecord","currentRecords","slice","nPages","Math","ceil","length","getData","fetch","then","res","json","resJson","console","log","renderItem","item","styles","card","uri","movie_banner","image","textContainer","title","description","outerContainer","innerContainer","StyleSheet","create","flex","backgroundColor","padding","marginVertical","borderWidth","borderRadius","fontSize","fontWeight","width","height"],"sources":["C:/Users/ADMIN/Downloads/rnt-pagination-main/rnt-pagination-main/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { StyleSheet, Text, View, FlatList, Image } from \"react-native\";\n\nimport Pagination from \"./components/Pagination\";\n\nexport default function App() {\n  const [data, setData] = useState([]);\n\n  // User is currently on this page\n  const [currentPage, setCurrentPage] = useState(1);\n  // No of Records to be displayed on each page\n  const [recordsPerPage] = useState(10);\n\n  const indexOfLastRecord = currentPage * recordsPerPage;\n\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n\n  // Records to be displayed on the current page\n  const currentRecords = data.slice(indexOfFirstRecord, indexOfLastRecord);\n\n  const nPages = Math.ceil(data.length / recordsPerPage);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = async () => {\n    fetch(\"https://ghibliapi.herokuapp.com/films\")\n      .then((res) => res.json())\n      .then((resJson) => setData(resJson));\n  };\n\n  console.log(data);\n\n  const renderItem = ({ item }) => {\n    return (\n      <View style={styles.card}>\n        <Image source={{ uri: `${item.movie_banner}` }} style={styles.image} />\n        <View style={styles.textContainer}>\n          <Text style={styles.title}>{item.title}</Text>\n          <Text>{item.description}</Text>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <View style={styles.outerContainer}>\n      <View style={styles.innerContainer}>\n        <FlatList data={currentRecords} renderItem={renderItem} />\n      </View>\n      <Pagination\n        nPages={nPages}\n        currentPage={currentPage}\n        setCurrentPage={setCurrentPage}\n      />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  outerContainer: {\n    flex: 1,\n  },\n  innerContainer: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    padding: 20,\n  },\n  card: {\n    marginVertical: 20,\n    borderWidth: 1,\n    borderRadius: 5,\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n  },\n  description: {},\n  image: {\n    width: \"100%\",\n    height: 200,\n  },\n  textContainer: {\n    padding: 15,\n  },\n});\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAAA;AAAA;AAAA;AAAA;AAG5C,OAAOC,UAAU;AAAgC;AAAA;AAEjD,eAAe,SAASC,GAAG,GAAG;EAC5B,gBAAwBH,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA7BI,IAAI;IAAEC,OAAO;;EAGpB,iBAAsCL,QAAQ,CAAC,CAAC,CAAC;IAAA;IAA1CM,WAAW;IAAEC,cAAc;EAElC,iBAAyBP,QAAQ,CAAC,EAAE,CAAC;IAAA;IAA9BQ,cAAc;EAErB,IAAMC,iBAAiB,GAAGH,WAAW,GAAGE,cAAc;EAEtD,IAAME,kBAAkB,GAAGD,iBAAiB,GAAGD,cAAc;;EAG7D,IAAMG,cAAc,GAAGP,IAAI,CAACQ,KAAK,CAACF,kBAAkB,EAAED,iBAAiB,CAAC;EAExE,IAAMI,MAAM,GAAGC,IAAI,CAACC,IAAI,CAACX,IAAI,CAACY,MAAM,GAAGR,cAAc,CAAC;EAEtDP,SAAS,CAAC,YAAM;IACdgB,OAAO,EAAE;EACX,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMA,OAAO;IAAA,6BAAG,aAAY;MAC1BC,KAAK,CAAC,uCAAuC,CAAC,CAC3CC,IAAI,CAAC,UAACC,GAAG;QAAA,OAAKA,GAAG,CAACC,IAAI,EAAE;MAAA,EAAC,CACzBF,IAAI,CAAC,UAACG,OAAO;QAAA,OAAKjB,OAAO,CAACiB,OAAO,CAAC;MAAA,EAAC;IACxC,CAAC;IAAA,gBAJKL,OAAO;MAAA;IAAA;EAAA,GAIZ;EAEDM,OAAO,CAACC,GAAG,CAACpB,IAAI,CAAC;EAEjB,IAAMqB,UAAU,GAAG,SAAbA,UAAU,QAAiB;IAAA,IAAXC,IAAI,SAAJA,IAAI;IACxB,OACE,MAAC,IAAI;MAAC,KAAK,EAAEC,MAAM,CAACC,IAAK;MAAA,WACvB,KAAC,KAAK;QAAC,MAAM,EAAE;UAAEC,GAAG,OAAKH,IAAI,CAACI;QAAe,CAAE;QAAC,KAAK,EAAEH,MAAM,CAACI;MAAM,EAAG,EACvE,MAAC,IAAI;QAAC,KAAK,EAAEJ,MAAM,CAACK,aAAc;QAAA,WAChC,KAAC,IAAI;UAAC,KAAK,EAAEL,MAAM,CAACM,KAAM;UAAA,UAAEP,IAAI,CAACO;QAAK,EAAQ,EAC9C,KAAC,IAAI;UAAA,UAAEP,IAAI,CAACQ;QAAW,EAAQ;MAAA,EAC1B;IAAA,EACF;EAEX,CAAC;EAED,OACE,MAAC,IAAI;IAAC,KAAK,EAAEP,MAAM,CAACQ,cAAe;IAAA,WACjC,KAAC,IAAI;MAAC,KAAK,EAAER,MAAM,CAACS,cAAe;MAAA,UACjC,KAAC,QAAQ;QAAC,IAAI,EAAEzB,cAAe;QAAC,UAAU,EAAEc;MAAW;IAAG,EACrD,EACP,KAAC,UAAU;MACT,MAAM,EAAEZ,MAAO;MACf,WAAW,EAAEP,WAAY;MACzB,cAAc,EAAEC;IAAe,EAC/B;EAAA,EACG;AAEX;AAEA,IAAMoB,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BH,cAAc,EAAE;IACdI,IAAI,EAAE;EACR,CAAC;EACDH,cAAc,EAAE;IACdG,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,OAAO,EAAE;EACX,CAAC;EACDb,IAAI,EAAE;IACJc,cAAc,EAAE,EAAE;IAClBC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC;EACDX,KAAK,EAAE;IACLY,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd,CAAC;EACDZ,WAAW,EAAE,CAAC,CAAC;EACfH,KAAK,EAAE;IACLgB,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EACDhB,aAAa,EAAE;IACbS,OAAO,EAAE;EACX;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}